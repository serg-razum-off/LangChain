#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":".NET"},{"aliases":["C#","c#"],"languageName":"C#","name":"csharp"},{"aliases":["F#","f#"],"languageName":"F#","name":"fsharp"},{"aliases":[],"languageName":"HTML","name":"html"},{"aliases":[],"languageName":"http","name":"httpRequest"},{"aliases":["js"],"languageName":"JavaScript","name":"javascript"},{"aliases":[],"languageName":"KQL","name":"kql"},{"aliases":[],"languageName":"Mermaid","name":"mermaid"},{"aliases":["powershell"],"languageName":"PowerShell","name":"pwsh"},{"aliases":[],"languageName":"SQL","name":"sql"},{"aliases":[],"name":"value"},{"aliases":["frontend"],"name":"vscode"},{"aliases":[],"name":"webview"}]}}

#!markdown

# PowerShell Notebook
> VS Code CShP --> Reload Window \
> VS Code CShP --> Restart Kernel

#!markdown

## Init GIT Class

#!pwsh

Test-Path ..\ProjectSettings\!ProjectSettings.json

#!pwsh

# identify ProjectRoot. Pay Attention that for things to work, this ProjectRoot should be specified in !ProjectSettings.json

$projectRoot = ""

 1..10 |  % { $path=(('..\' * $_) + '\ProjectSettings\!ProjectSettings.json'); if (Test-Path $path ) { $projectRoot = (cat $path | ConvertFrom-Json ).projectRoot ; return  }  }  

Write-Host $projectRoot;  

#!pwsh

. $projectRoot/Classes/git.ps1; 
$git = [git]::new()

#!markdown

## Committing Changes

#!pwsh

$currentUser = git config user.name
$date = Get-Date -Format "yyy-MM-dd"

$commHeaderMessage = 'Some bugs fixed in '

#Body can be multiline. Make a vivid separator for each of the lines, like '-->'
$commBodyMessage = ` 
'
>> ./ProjectSettings/setup.py --> added for bulk import modules into notebooks
>> ./ProjectSettings/ModulesInstall.ps1 --> added for bulk installing modules to new env
'

$commMsg = "$currentUser [$date]: $commHeaderMessage `n $commBodyMessage"

$commMsg

#!pwsh

$git.Commit($commMsg)
$git.SyncBranch()

#!markdown

## Create New Branch (and switching to it)

#!pwsh

$git.ShowBranches()

#!pwsh

$git.NewBranch("VIZ_Pandas_RND_DF")

#!pwsh

$pbx.git_SwitchBranch("PS_updates_learning")

#!markdown

## Merging to Main

#!pwsh

$   $git.MergeToMain()
